import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

st.set_page_config(page_title="NumPy", layout="wide")

menu = st.sidebar.radio("***",
    (
        "–û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞",
        "–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏",
        "–ü—Ä–∏–º–µ—Ä—ã",
        "Numpy –∏ Matplotlib: —Å–≤—è–∑—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
    )
)


# ---------- helper: –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤—ã–≤–æ–¥ –º–∞—Å—Å–∏–≤–æ–≤ ----------
def format_array_compact(arr, precision=3, max_items=8):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–º–ø–∞–∫—Ç–Ω—É—é —Å—Ç—Ä–æ–∫—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞:
    - –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ max_items –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç '...'
    - –∑–∞–¥–∞—ë—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –≤—ã–≤–æ–¥–∞
    """
    arr = np.asarray(arr)
    if arr.size == 0:
        return "[]"

    # –ï—Å–ª–∏ –æ–¥–Ω–æ–º–µ—Ä–Ω—ã–π ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü –ø—Ä–∏ –±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    if arr.ndim == 1:
        if arr.size <= max_items:
            return np.array2string(arr, precision=precision, separator=', ')
        else:
            head = np.array2string(arr[: max_items // 2], precision=precision, separator=', ')
            tail = np.array2string(arr[-(max_items // 2) :], precision=precision, separator=', ')
            # —É–±–∏—Ä–∞–µ–º –≤–Ω–µ—à–Ω–∏–µ —Å–∫–æ–±–∫–∏ —É head/tail
            head = head.strip('[]')
            tail = tail.strip('[]')
            return f"[{head}, ..., {tail}]"

    # –î–ª—è –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫—Ä–∞—Ç–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
    return np.array2string(arr, precision=precision, max_line_width=80, threshold=6)


# -------------------- –û–ë–©–ê–Ø –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ê --------------------
if menu == "–û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞":
    st.markdown("""
    #### üî¢ –û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞

    **NumPy (Numerical Python)** ‚Äî —ç—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Python –¥–ª—è **—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π** –∏ **—Ä–∞–±–æ—Ç—ã —Å –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–º–∏ –º–∞—Å—Å–∏–≤–∞–º–∏**.

    –û—Å–Ω–æ–≤–Ω—ã–µ —Ü–µ–ª–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:
    * –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–∏—Ö –æ–±—ä—ë–º–æ–≤ —á–∏—Å–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
    * –£–¥–æ–±–Ω–∞—è –≤–µ–∫—Ç–æ—Ä–Ω–∞—è –∏ –º–∞—Ç—Ä–∏—á–Ω–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞.
    * –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —à–∏—Ä–æ–∫–æ–≥–æ —Å–ø–µ–∫—Ç—Ä–∞ **–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π**: –æ—Ç –±–∞–∑–æ–≤—ã—Ö –¥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∏ –ª–∏–Ω–µ–π–Ω–æ–π –∞–ª–≥–µ–±—Ä—ã.
    * –û—Å–Ω–æ–≤–∞ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö: **Pandas, SciPy, scikit-learn, Matplotlib** –∏ –¥—Ä.

    """)

    st.info("NumPy ‚Äî —ç—Ç–æ —Å–µ—Ä–¥—Ü–µ –Ω–∞—É—á–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –≤ Python üí°")

    st.markdown("""
    **–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö** ‚Äî `ndarray` (n-–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤).  
    –û–Ω –ø–æ—Ö–æ–∂ –Ω–∞ —Å–ø–∏—Å–æ–∫, –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç **–≤ –¥–µ—Å—è—Ç–∫–∏ —Ä–∞–∑ –±—ã—Å—Ç—Ä–µ–µ** –±–ª–∞–≥–æ–¥–∞—Ä—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ C.
    """)

# -------------------- –û–°–ù–û–í–ù–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò --------------------
if menu == "–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏":
    st.markdown("""
    #### ‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ NumPy

    **NumPy** –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —à–∏—Ä–æ–∫–∏–π –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
    """)

    st.markdown("""
    **–ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:"
    """)

    st.markdown("""
    * –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤ (`np.array`, `np.arange`, `np.linspace`)
    * –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ –º–∞—Å—Å–∏–≤–∞–º–∏ –±–µ–∑ —Ü–∏–∫–ª–æ–≤ (–≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)
    * –õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞ (`np.dot`, `np.linalg.inv`, `np.linalg.eig`)
    * –†–∞–±–æ—Ç–∞ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ (`np.random`)
    * –£–¥–æ–±–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è **–∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏, —Å—Ä–µ–∑–æ–≤ –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ñ–æ—Ä–º**
    * –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏ **C, C++ –∏ Fortran**
    """)

    st.divider()
    st.markdown("#### üßÆ –ü—Ä–∏–º–µ—Ä –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π")

    x = np.linspace(0, 10, 6)
    y = x ** 2 + 2 * x + 1

    # –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤—ã–≤–æ–¥ –≤–º–µ—Å—Ç–æ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–π —Ç–∞–±–ª–∏—Ü—ã
    st.markdown(f"**x:** `{format_array_compact(x)}`")
    st.markdown(f"**y = x¬≤ + 2x + 1:** `{format_array_compact(y)}`")

    fig, ax = plt.subplots()
    ax.plot(x, y, marker='o', linewidth=1)
    ax.set_title("–ü–∞—Ä–∞–±–æ–ª–∞: y = x¬≤ + 2x + 1")
    ax.grid(True, linestyle='--', alpha=0.6)
    st.pyplot(fig)

# -------------------- –ü–†–ò–ú–ï–†–´ --------------------
if menu == "–ü—Ä–∏–º–µ—Ä—ã":
    st.markdown("""
    #### üìä –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è NumPy

    NumPy –¥–µ–ª–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å –¥–∞–Ω–Ω—ã–º–∏ **–∫–æ–º–ø–∞–∫—Ç–Ω–æ–π –∏ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ–π**.
    –ù–∏–∂–µ ‚Äî –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∏–ø–∏—á–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤.
    """)

    st.markdown("##### ‚ñ∂Ô∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    code_random = """import numpy as np

data = np.random.randn(1000)  # 1000 —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –∏–∑ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
mean = np.mean(data)
std = np.std(data)

print("–°—Ä–µ–¥–Ω–µ–µ:", mean)
print("–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ:", std)"""
    st.code(code_random, language="python")

    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    data = np.random.randn(1000)
    fig, ax = plt.subplots()
    ax.hist(data, bins=30, alpha=0.7)
    ax.set_title("–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    ax.set_xlabel("–ó–Ω–∞—á–µ–Ω–∏—è")
    ax.set_ylabel("–ß–∞—Å—Ç–æ—Ç–∞")
    st.pyplot(fig)

    st.markdown("##### ‚ñ∂Ô∏è –õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞")
    code_linalg = """A = np.array([[2, 1], [1, 3]])
b = np.array([8, 18])
x = np.linalg.solve(A, b)
print("–†–µ—à–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:", x)"""
    st.code(code_linalg, language="python")

    # –†–µ–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
    A = np.array([[2.0, 1.0], [1.0, 3.0]])
    b = np.array([8.0, 18.0])
    x = np.linalg.solve(A, b)
    st.markdown("**–†–µ—à–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã A x = b:**")
    st.markdown(f"`x = {format_array_compact(x, precision=6)}`")
    st.markdown("**–ü—Ä–æ–≤–µ—Ä–∫–∞ (A @ x):**")
    st.markdown(f"`A @ x = {format_array_compact(A @ x, precision=6)}`  (–¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å `b`)" )

# -------------------- –°–í–Ø–ó–¨ NUMPY –ò MATPLOTLIB --------------------
if menu == "Numpy –∏ Matplotlib: —Å–≤—è–∑—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π":
    st.markdown("""
    #### üîó NumPy –∏ Matplotlib: —Å–≤—è–∑—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π

    **Matplotlib** —Ç–µ—Å–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å **NumPy**, –ø–æ—Å–∫–æ–ª—å–∫—É –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≥—Ä–∞—Ñ–∏–∫–æ–≤
    —Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤–æ–≤ `numpy.ndarray` ‚Äî –Ω–µ–≤–∞–∂–Ω–æ, —Å–æ–∑–¥–∞—é—Ç—Å—è –ª–∏ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è
    –∫–∞–∫ `np.sin(x)`, –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏ –Ω–∞–¥ –º–∞—Å—Å–∏–≤–∞–º–∏ –∏–ª–∏ –∫–∞–∫ —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ.

    –ü—Ä–∏–º–µ—Ä:
    - NumPy —Å–æ–∑–¥–∞—ë—Ç –¥–∞–Ω–Ω—ã–µ: `x = np.linspace(0, 10, 100)`.
    - –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å –ø–æ–º–æ—â—å—é NumPy –∑–Ω–∞—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, `y = np.sin(x)` –∏–ª–∏ –ª—é–±–∞—è –¥—Ä—É–≥–∞—è —Ñ—É–Ω–∫—Ü–∏—è).
    - Matplotlib —Å—Ç—Ä–æ–∏—Ç –≥—Ä–∞—Ñ–∏–∫ –ø–æ –º–∞—Å—Å–∏–≤–∞–º `plt.plot(x, y)` ‚Äî —Ç–æ –µ—Å—Ç—å Matplotlib –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç
      *–º–∞—Å—Å–∏–≤—ã —á–∏—Å–µ–ª*, –∞ –Ω–µ "—Ñ—É–Ω–∫—Ü–∏–∏".

    –í–º–µ—Å—Ç–µ –æ–Ω–∏ –æ–±—Ä–∞–∑—É—é—Ç **—Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö** –≤ Python.
    """)

    st.divider()
    st.markdown("#### üìà –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è: —Å–∏–Ω—É—Å–æ–∏–¥–∞ —Å –∑–∞—Ç—É—Ö–∞—é—â–µ–π –∞–º–ø–ª–∏—Ç—É–¥–æ–π")

    # --- –ö–æ–ª–æ–Ω–∫–∏: –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –≥—Ä–∞—Ñ–∏–∫ ---
    col1, col2 = st.columns([1, 2])

    with col1:
        st.markdown("##### ‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥—Ä–∞—Ñ–∏–∫–∞")
        amplitude = st.slider("–ê–º–ø–ª–∏—Ç—É–¥–∞", 0.1, 2.0, 1.0, 0.1)
        frequency = st.slider("–ß–∞—Å—Ç–æ—Ç–∞", 0.5, 5.0, 1.0, 0.1)
        decay = st.slider("–ó–∞—Ç—É—Ö–∞–Ω–∏–µ", 0.0, 1.0, 0.3, 0.05)
        st.markdown("–ò–∑–º–µ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫ –º–µ–Ω—è–µ—Ç—Å—è —Ñ–æ—Ä–º–∞ —Å–∏–≥–Ω–∞–ª–∞ üëâ")

    with col2:
        # --- –î–∞–Ω–Ω—ã–µ ---
        x = np.linspace(0, 10, 400)
        y = amplitude * np.sin(frequency * x) * np.exp(-decay * x)

        # --- –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ ---
        fig, ax = plt.subplots()
        ax.plot(x, y, linewidth=2)
        ax.set_title("–°–∏–Ω—É—Å–æ–∏–¥–∞ —Å –∑–∞—Ç—É—Ö–∞—é—â–µ–π –∞–º–ø–ª–∏—Ç—É–¥–æ–π")
        ax.set_xlabel("x")
        ax.set_ylabel("y")
        ax.grid(True, linestyle='--', alpha=0.5)

        # --- –§–∏–∫—Å–∞—Ü–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ –æ—Å–µ–π ---
        ax.set_xlim(0, 10)
        ax.set_ylim(-2, 2)  # –¥–∏–∞–ø–∞–∑–æ–Ω –∞–º–ø–ª–∏—Ç—É–¥—ã —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏

        st.pyplot(fig)

    st.success("–û—Å–∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã, —á—Ç–æ–±—ã —Ñ–æ—Ä–º–∞ —Å–∏–≥–Ω–∞–ª–∞ –º–µ–Ω—è–ª–∞—Å—å –Ω–∞–≥–ª—è–¥–Ω–æ üîç")
