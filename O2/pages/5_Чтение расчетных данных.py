import streamlit as st
import matplotlib.pyplot as plt
import numpy as np
import io

st.set_page_config(page_title="–ß—Ç–µ–Ω–∏–µ —Ä–∞—Å—á—ë—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö", layout="wide")

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä, –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
def show_plot(fig, width_inches=5, height_inches=3):
    fig.set_size_inches(width_inches, height_inches)
    fig.tight_layout(pad=0.8)
    st.pyplot(fig, use_container_width=False)

# –î–æ–±–∞–≤–∏—Ç—å padding –ø–æ Y, —á—Ç–æ–±—ã –ª–∏–Ω–∏—è –Ω–µ —É–ø–∏—Ä–∞–ª–∞—Å—å –≤ –≥—Ä–∞–Ω–∏—Ü—ã
def apply_ylim_with_padding(ax, y, pad_factor=0.08, fixed=None):
    """y: np.array –∏–ª–∏ —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π; pad_factor ‚Äî –¥–æ–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–ª—è –æ—Ç—Å—Ç—É–ø–∞.
       fixed: (ymin, ymax) –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–µ–ª—ã"""
    if fixed is not None:
        ax.set_ylim(fixed)
        return
    y = np.asarray(y)
    y_min, y_max = np.nanmin(y), np.nanmax(y)
    if np.isclose(y_min, y_max):
        # –µ—Å–ª–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ ‚Äî –∑–∞–¥–∞—ë–º –Ω–µ–±–æ–ª—å—à–æ–π —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω
        delta = max(0.5, abs(y_min) * 0.1)
        ax.set_ylim(y_min - delta, y_max + delta)
    else:
        pad = (y_max - y_min) * pad_factor
        ax.set_ylim(y_min - pad, y_max + pad)


menu = st.sidebar.radio("***",
    (
        "–ü—Ä—è–º–∞—è —Ä–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ Numpy",
        "–ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Å Numpy",
        "–ß—Ç–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–æ–≤",
    )
)

# -------------------- –ü–†–Ø–ú–ê–Ø –†–ê–ë–û–¢–ê –° –ú–ê–°–°–ò–í–ê–ú–ò --------------------
if menu == "–ü—Ä—è–º–∞—è —Ä–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ Numpy":
    st.markdown("""
    #### üî¢ –ü—Ä—è–º–∞—è —Ä–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ NumPy

    `NumPy` ‚Äî –æ—Å–Ω–æ–≤–∞ —á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –≤ Python.  
    –ú–∞—Å—Å–∏–≤—ã (`ndarray`) –ø–æ–∑–≤–æ–ª—è—é—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ –æ–±—ä—ë–º—ã –¥–∞–Ω–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.

    **–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤:**
    ```python
    import numpy as np
    x = np.linspace(0, 10, 100)
    y = np.sin(x)
    ```
    """)

    st.markdown("#### –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞")

    x = np.linspace(0, 10, 100)
    y = np.sin(x)

    fig, ax = plt.subplots()
    ax.plot(x, y, color="royalblue", linewidth=2)
    ax.set_title("–ü—Ä–∏–º–µ—Ä –ø—Ä—è–º–æ–π —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Å–∏–≤–æ–º NumPy")
    ax.set_xlabel("x")
    ax.set_ylabel("sin(x)")
    ax.grid(True, linestyle='--', alpha=0.6)
    apply_ylim_with_padding(ax, y)          # –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å –ø–æ Y
    show_plot(fig)

    st.info("NumPy –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤–µ–∫—Ç–æ—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –±–µ–∑ —Ü–∏–∫–ª–æ–≤, —É—Å–∫–æ—Ä—è—è —Ä–∞—Å—á—ë—Ç—ã –≤ –¥–µ—Å—è—Ç–∫–∏ —Ä–∞–∑.")

# -------------------- –ü–†–ò–ú–ï–† –ü–û–õ–ù–û–ì–û –¶–ò–ö–õ–ê --------------------
if menu == "–ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Å Numpy":
    st.markdown("""
    #### üîÅ –ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Å NumPy

    –ó–¥–µ—Å—å –ø–æ–∫–∞–∑–∞–Ω **–ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö**:
    1. –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å –∏—Å—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.  
    2. –†–∞—Å—á—ë—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã—Ö –≤–µ–ª–∏—á–∏–Ω.  
    3. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é Matplotlib.
    """)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    x = np.linspace(0, 2*np.pi, 200)
    y = np.sin(x)
    y_derivative = np.gradient(y, x)

    col1, col2 = st.columns(2)

    with col1:
        fig1, ax1 = plt.subplots()
        ax1.plot(x, y, color='mediumseagreen', label='y = sin(x)')
        ax1.legend(fontsize=8)
        ax1.set_title("–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        ax1.grid(True, linestyle='--', alpha=0.6)
        apply_ylim_with_padding(ax1, y)
        show_plot(fig1)

    with col2:
        fig2, ax2 = plt.subplots()
        ax2.plot(x, y_derivative, color='tomato', label="dy/dx")
        ax2.legend(fontsize=8)
        ax2.set_title("–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è")
        ax2.grid(True, linestyle='--', alpha=0.6)
        apply_ylim_with_padding(ax2, y_derivative)
        show_plot(fig2)

    st.success("""
    ‚û§ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞—Å—á—ë—Ç–∞:  
    –¥–∞–Ω–Ω—ã–µ ‚Üí –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ ‚Üí –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è.
    """)

# -------------------- –ß–¢–ï–ù–ò–ï –ò–ó –§–ê–ô–õ–û–í --------------------
if menu == "–ß—Ç–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–æ–≤":
    st.markdown("""
    #### üìÇ –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤

    NumPy –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ –∏ –±—ã—Å—Ç—Ä—ã–µ –º–µ—Ç–æ–¥—ã –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∏ –±–∏–Ω–∞—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:
    * `np.loadtxt()` ‚Äî —á—Ç–µ–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ (CSV, TXT);
    * `np.genfromtxt()` ‚Äî –±–æ–ª–µ–µ –≥–∏–±–∫–∞—è –≤–µ—Ä—Å–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∏;
    * `np.load()` / `np.save()` ‚Äî —Ä–∞–±–æ—Ç–∞ —Å –±–∏–Ω–∞—Ä–Ω—ã–º–∏ `.npy` —Ñ–∞–π–ª–∞–º–∏.
    """)

    st.code("""
# –ü—Ä–∏–º–µ—Ä —á—Ç–µ–Ω–∏—è –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
data = np.loadtxt("data.txt")
x = data[:, 0]
y = data[:, 1]

plt.plot(x, y)
plt.show()
    """, language="python")

    st.markdown("#### üí° –ü—Ä–∏–º–µ—Ä —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º —Ñ–∞–π–ª–æ–º (–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è):")

    # –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ CSV –≤ –ø–∞–º—è—Ç–∏
    csv_data = "x,y\n0,0\n1,1\n2,4\n3,9\n4,16"
    data = np.genfromtxt(io.StringIO(csv_data), delimiter=",", skip_header=1)

    x = data[:, 0]
    y = data[:, 1]

    fig, ax = plt.subplots()
    ax.plot(x, y, marker='o', color='darkorange', linewidth=2)
    ax.set_xlabel("x")
    ax.set_ylabel("y = x¬≤")
    ax.set_title("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞")
    ax.grid(True, linestyle='--', alpha=0.6)
    apply_ylim_with_padding(ax, y)
    show_plot(fig)

    st.caption("–í —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –ø–æ—Å—Ç—É–ø–∞—Ç—å –∏–∑ CSV, Excel, –¥–∞—Ç—á–∏–∫–æ–≤ –∏–ª–∏ —Ä–∞—Å—á—ë—Ç–Ω—ã—Ö –º–æ–¥—É–ª–µ–π.")
